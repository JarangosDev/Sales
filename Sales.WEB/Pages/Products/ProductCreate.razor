@page "/products/create/{ProductId:int}"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService

<h3>Crear Ciudad</h3>

<ProductForm @ref="productForm" Product="product" OnValidSubmit="CreateAsync" ReturnAction="Return" />

@code {
    private Product product = new();
    private ProductForm? productForm;

    [Parameter]
    public int ProductId { get; set; }

    private async Task CreateAsync()
    {
        product.ProdCategoryId = ProductId;
        var httpResponse = await repository.Post("/api/products", product);
        if (httpResponse.Error)
        {
            var message = await httpResponse.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        Return();
    }

    private void Return()
    {
        productForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo($"/prodcategories/details/{ProductId}");
    }
}
